import{b as G}from"./vendor-8F4M-BzORa8vA.js";import{s as J}from"./vendor-8i6V-DI9FKtlJ.js";import{T as Q}from"./vendor-bdD3-BwjMff6i.js";import{g as W,h as v}from"./vendor-RODT-CrxIlgye.js";import{E as X}from"./vendor-2zXA-F4YoZAjp.js";import{u as Y}from"./vendor-w6ry-D33Z4WlJ.js";import{u as Z}from"./vendor-1esc-CwBhTk4T.js";import{u as _}from"./vendor-RoqY-BER53Zrw.js";import{_ as ee}from"./vendor-pM4a-CqGSI99y.js";import{i as te}from"./vendor-9yxy-Cbwm2u4R.js";import{u as re}from"./vendor-cebD-BGFhTQCu.js";import{u as ne}from"./vendor-unoq-CFxLHdLI.js";import{f as oe}from"./vendor-clQw-JAUZZBS7.js";import{d as ae,v as de,a as p,o as c,C as se,y as le,F as ie,D as ue,f as ce,r as ye,b as k,l as he,c as fe,w as i,p as E,g as me}from"./vendor-RE7Z-DOm9JKld.js";import{n as y,t as pe}from"./vendor-7avT-DhdrFwTb.js";import{r as u}from"./vendor-eqDO-Ti6p_k8X.js";const ge=ae({name:"ElTree",components:{ElTreeNode:X},props:{data:{type:Array,default:()=>[]},emptyText:{type:String},renderAfterExpand:{type:Boolean,default:!0},nodeKey:String,checkStrictly:Boolean,defaultExpandAll:Boolean,expandOnClickNode:{type:Boolean,default:!0},checkOnClickNode:Boolean,checkDescendants:{type:Boolean,default:!1},autoExpandParent:{type:Boolean,default:!0},defaultCheckedKeys:Array,defaultExpandedKeys:Array,currentNodeKey:[String,Number],renderContent:Function,showCheckbox:{type:Boolean,default:!1},draggable:{type:Boolean,default:!1},allowDrag:Function,allowDrop:Function,props:{type:Object,default:()=>({children:"children",label:"label",disabled:"disabled"})},lazy:{type:Boolean,default:!1},highlightCurrent:Boolean,load:Function,filterNodeMethod:Function,accordion:Boolean,indent:{type:Number,default:18},icon:{type:te}},emits:["check-change","current-change","node-click","node-contextmenu","node-collapse","node-expand","check","node-drag-start","node-drag-end","node-drop","node-drag-leave","node-drag-enter","node-drag-over"],setup(e,d){const{t:g}=re(),K=ne("tree"),h=he(J,null),r=u(new Q({key:e.nodeKey,data:e.data,lazy:e.lazy,props:e.props,load:e.load,currentNodeKey:e.currentNodeKey,checkStrictly:e.checkStrictly,checkDescendants:e.checkDescendants,defaultCheckedKeys:e.defaultCheckedKeys,defaultExpandedKeys:e.defaultExpandedKeys,autoExpandParent:e.autoExpandParent,defaultExpandAll:e.defaultExpandAll,filterNodeMethod:e.filterNodeMethod}));r.value.initialize();const s=u(r.value.root),o=u(null),f=u(null),C=u(null),{broadcastExpanded:m}=Y(e),{dragState:w}=Z({props:e,ctx:d,el$:f,dropIndicator$:C,store:r});_({el$:f},r);const T=fe(()=>{const{childNodes:t}=s.value,n=h?h.hasFilteredOptions!==0:!1;return(!t||t.length===0||t.every(({visible:a})=>!a))&&!n});i(()=>e.currentNodeKey,t=>{r.value.setCurrentNodeKey(t)}),i(()=>e.defaultCheckedKeys,t=>{r.value.setDefaultCheckedKey(t)}),i(()=>e.defaultExpandedKeys,t=>{r.value.setDefaultExpandedKeys(t)}),i(()=>e.data,t=>{r.value.setData(t)},{deep:!0}),i(()=>e.checkStrictly,t=>{r.value.checkStrictly=t});const B=t=>{if(!e.filterNodeMethod)throw new Error("[Tree] filterNodeMethod is required when filter");r.value.filter(t)},b=t=>W(e.nodeKey,t.data),S=t=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in getNodePath");const n=r.value.getNode(t);if(!n)return[];const a=[n.data];let l=n.parent;for(;l&&l!==s.value;)a.push(l.data),l=l.parent;return a.reverse()},D=(t,n)=>r.value.getCheckedNodes(t,n),A=t=>r.value.getCheckedKeys(t),N=()=>{const t=r.value.getCurrentNode();return t?t.data:null},$=()=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in getCurrentKey");const t=N();return t?t[e.nodeKey]:null},F=(t,n)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCheckedNodes");r.value.setCheckedNodes(t,n)},q=(t,n)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCheckedKeys");r.value.setCheckedKeys(t,n)},x=(t,n,a)=>{r.value.setChecked(t,n,a)},I=()=>r.value.getHalfCheckedNodes(),P=()=>r.value.getHalfCheckedKeys(),z=(t,n=!0)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCurrentNode");v(r,d.emit,()=>{m(t),r.value.setUserCurrentNode(t,n)})},H=(t,n=!0)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in setCurrentKey");v(r,d.emit,()=>{m(),r.value.setCurrentNodeKey(t,n)})},M=t=>r.value.getNode(t),O=t=>{r.value.remove(t)},j=(t,n)=>{r.value.append(t,n)},L=(t,n)=>{r.value.insertBefore(t,n)},V=(t,n)=>{r.value.insertAfter(t,n)},R=(t,n,a)=>{m(n),d.emit("node-expand",t,n,a)},U=(t,n)=>{if(!e.nodeKey)throw new Error("[Tree] nodeKey is required in updateKeyChild");r.value.updateChildren(t,n)};return E("RootTree",{ctx:d,props:e,store:r,root:s,currentNode:o,instance:me()}),E(oe,void 0),{ns:K,store:r,root:s,currentNode:o,dragState:w,el$:f,dropIndicator$:C,isEmpty:T,filter:B,getNodeKey:b,getNodePath:S,getCheckedNodes:D,getCheckedKeys:A,getCurrentNode:N,getCurrentKey:$,setCheckedNodes:F,setCheckedKeys:q,setChecked:x,getHalfCheckedNodes:I,getHalfCheckedKeys:P,setCurrentNode:z,setCurrentKey:H,t:g,getNode:M,remove:O,append:j,insertBefore:L,insertAfter:V,handleNodeExpand:R,updateKeyChildren:U}}});function Ke(e,d,g,K,h,r){const s=de("el-tree-node");return c(),p("div",{ref:"el$",class:y([e.ns.b(),e.ns.is("dragging",!!e.dragState.draggingNode),e.ns.is("drop-not-allow",!e.dragState.allowDrop),e.ns.is("drop-inner",e.dragState.dropType==="inner"),{[e.ns.m("highlight-current")]:e.highlightCurrent}]),role:"tree"},[(c(!0),p(ie,null,ue(e.root.childNodes,o=>(c(),ce(s,{key:e.getNodeKey(o),node:o,props:e.props,accordion:e.accordion,"render-after-expand":e.renderAfterExpand,"show-checkbox":e.showCheckbox,"render-content":e.renderContent,onNodeExpand:e.handleNodeExpand},null,8,["node","props","accordion","render-after-expand","show-checkbox","render-content","onNodeExpand"]))),128)),e.isEmpty?(c(),p("div",{key:0,class:y(e.ns.e("empty-block"))},[ye(e.$slots,"empty",{},()=>{var o;return[k("span",{class:y(e.ns.e("empty-text"))},pe((o=e.emptyText)!=null?o:e.t("el.tree.emptyText")),3)]})],2)):se("v-if",!0),le(k("div",{ref:"dropIndicator$",class:y(e.ns.e("drop-indicator"))},null,2),[[G,e.dragState.showDropIndicator]])],2)}var Ie=ee(ge,[["render",Ke],["__file","tree.vue"]]);export{Ie as T};
