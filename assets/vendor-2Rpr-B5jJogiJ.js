import{c as O}from"./vendor-pfuJ-CSaTUXdT.js";import{D as E,A as S,C as A,E as D,d as R,e as g}from"./vendor-SBXC-DnSHQime.js";import{i as _,a as x}from"./vendor-UUu6-BeUS1t8s.js";const{max:I,min:T,floor:M}=Math,G={column:"columnWidth",row:"rowHeight"},d={column:"lastVisitedColumnIndex",row:"lastVisitedRowIndex"},l=(e,n,t,s)=>{const[i,o,f]=[t[s],e[G[s]],t[d[s]]];if(n>f){let r=0;if(f>=0){const m=i[f];r=m.offset+m.size}for(let m=f+1;m<=n;m++){const u=o(m);i[m]={offset:r,size:u},r+=u}t[d[s]]=n}return i[n]},v=(e,n,t,s,i,o)=>{for(;t<=s;){const f=t+M((s-t)/2),r=l(e,f,n,o).offset;if(r===i)return f;r<i?t=f+1:s=f-1}return I(0,t-1)},L=(e,n,t,s,i)=>{const o=i==="column"?e.totalColumn:e.totalRow;let f=1;for(;t<o&&l(e,t,n,i).offset<s;)t+=f,f*=2;return v(e,n,M(t/2),T(t,o-1),s,i)},z=(e,n,t,s)=>{const[i,o]=[n[s],n[d[s]]];return(o>0?i[o].offset:0)>=t?v(e,n,0,o,t,s):L(e,n,I(0,o),t,s)},N=({totalRow:e},{estimatedRowHeight:n,lastVisitedRowIndex:t,row:s})=>{let i=0;if(t>=e&&(t=e-1),t>=0){const r=s[t];i=r.offset+r.size}const f=(e-t-1)*n;return i+f},h=({totalColumn:e},{column:n,estimatedColumnWidth:t,lastVisitedColumnIndex:s})=>{let i=0;if(s>e&&(s=e-1),s>=0){const r=n[s];i=r.offset+r.size}const f=(e-s-1)*t;return i+f},V={column:h,row:N},w=(e,n,t,s,i,o,f)=>{const[r,m]=[o==="row"?e.height:e.width,V[o]],u=l(e,n,i,o),C=m(e,i),a=I(0,T(C-r,u.offset)),c=I(0,u.offset-r+f+u.size);switch(t===g&&(s>=c-r&&s<=a+r?t=S:t=A),t){case R:return a;case D:return c;case A:return Math.round(c+(a-c)/2);case S:default:return s>=c&&s<=a?s:c>a||s<c?c:a}},Y=O({name:"ElDynamicSizeGrid",getColumnPosition:(e,n,t)=>{const s=l(e,n,t,"column");return[s.size,s.offset]},getRowPosition:(e,n,t)=>{const s=l(e,n,t,"row");return[s.size,s.offset]},getColumnOffset:(e,n,t,s,i,o)=>w(e,n,t,s,i,"column",o),getRowOffset:(e,n,t,s,i,o)=>w(e,n,t,s,i,"row",o),getColumnStartIndexForOffset:(e,n,t)=>z(e,t,n,"column"),getColumnStopIndexForStartIndex:(e,n,t,s)=>{const i=l(e,n,s,"column"),o=t+e.width;let f=i.offset+i.size,r=n;for(;r<e.totalColumn-1&&f<o;)r++,f+=l(e,n,s,"column").size;return r},getEstimatedTotalHeight:N,getEstimatedTotalWidth:h,getRowStartIndexForOffset:(e,n,t)=>z(e,t,n,"row"),getRowStopIndexForStartIndex:(e,n,t,s)=>{const{totalRow:i,height:o}=e,f=l(e,n,s,"row"),r=t+o;let m=f.size+f.offset,u=n;for(;u<i-1&&m<r;)u++,m+=l(e,u,s,"row").size;return u},injectToInstance:(e,n)=>{const t=({columnIndex:o,rowIndex:f},r)=>{var m,u;r=x(r)?!0:r,_(o)&&(n.value.lastVisitedColumnIndex=Math.min(n.value.lastVisitedColumnIndex,o-1)),_(f)&&(n.value.lastVisitedRowIndex=Math.min(n.value.lastVisitedRowIndex,f-1)),(m=e.exposed)==null||m.getItemStyleCache.value(-1,null,null),r&&((u=e.proxy)==null||u.$forceUpdate())},s=(o,f)=>{t({columnIndex:o},f)},i=(o,f)=>{t({rowIndex:o},f)};Object.assign(e.proxy,{resetAfterColumnIndex:s,resetAfterRowIndex:i,resetAfter:t})},initCache:({estimatedColumnWidth:e=E,estimatedRowHeight:n=E})=>({column:{},estimatedColumnWidth:e,estimatedRowHeight:n,lastVisitedColumnIndex:-1,lastVisitedRowIndex:-1,row:{}}),clearCache:!1,validateProps:({columnWidth:e,rowHeight:n})=>{}});export{Y as D};
