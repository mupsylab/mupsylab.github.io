import{d as K}from"./vendor-7avT-DhdrFwTb.js";import{r as y}from"./vendor-eqDO-Ti6p_k8X.js";import{c as F}from"./vendor-RE7Z-DOm9JKld.js";function b(d,p){const f=y(new Set([])),r=y(new Set([])),k=F(()=>K(d.filterMethod));function v(a){var l;if(!k.value)return;const s=new Set,c=r.value,t=f.value,o=[],S=((l=p.value)==null?void 0:l.treeNodes)||[],u=d.filterMethod;t.clear();function h(x){x.forEach(e=>{o.push(e),u!=null&&u(a,e.data,e)?o.forEach(n=>{s.add(n.key)}):e.isLeaf&&t.add(e.key);const i=e.children;if(i&&h(i),!e.isLeaf){if(!s.has(e.key))t.add(e.key);else if(i){let n=!0;for(const E of i)if(!t.has(E.key)){n=!1;break}n?c.add(e.key):c.delete(e.key)}}o.pop()})}return h(S),s}function m(a){return r.value.has(a.key)}return{hiddenExpandIconKeySet:r,hiddenNodeKeySet:f,doFilter:v,isForceHiddenExpandIcon:m}}export{b as u};
