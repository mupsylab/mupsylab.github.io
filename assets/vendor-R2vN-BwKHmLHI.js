import{u as $}from"./vendor-eqCW-DCj8_tuZ.js";import{C as U,U as W,I as X}from"./vendor-lLeK-BB_Ol6Sd.js";import{s as Y,r as y}from"./vendor-eqDO-Ti6p_k8X.js";import{c as r,t as N}from"./vendor-RE7Z-DOm9JKld.js";const Q=(t,n,c)=>{const{form:S,formItem:T}=$(),a=Y(),d=y(),b=y(),f={firstButton:d,secondButton:b},m=r(()=>t.disabled||(S==null?void 0:S.disabled)||!1),o=r(()=>Math.min(n.firstValue,n.secondValue)),i=r(()=>Math.max(n.firstValue,n.secondValue)),h=r(()=>t.range?`${100*(i.value-o.value)/(t.max-t.min)}%`:`${100*(n.firstValue-t.min)/(t.max-t.min)}%`),V=r(()=>t.range?`${100*(o.value-t.min)/(t.max-t.min)}%`:"0%"),k=r(()=>t.vertical?{height:t.height}:{}),z=r(()=>t.vertical?{height:h.value,bottom:V.value}:{width:h.value,left:V.value}),B=()=>{a.value&&(n.sliderSize=a.value[`client${t.vertical?"Height":"Width"}`])},I=e=>{const l=t.min+e*(t.max-t.min)/100;if(!t.range)return d;let u;return Math.abs(o.value-l)<Math.abs(i.value-l)?u=n.firstValue<n.secondValue?"firstButton":"secondButton":u=n.firstValue>n.secondValue?"firstButton":"secondButton",f[u]},v=e=>{const l=I(e);return l.value.setPosition(e),l},F=e=>{n.firstValue=e??t.min,_(t.range?[o.value,i.value]:e??t.min)},O=e=>{n.secondValue=e,t.range&&_([o.value,i.value])},_=e=>{c(W,e),c(X,e)},w=async()=>{await N(),c(U,t.range?[o.value,i.value]:t.modelValue)},E=e=>{var l,u,R,P,x,C;if(m.value||n.dragging)return;B();let s=0;if(t.vertical){const g=(R=(u=(l=e.touches)==null?void 0:l.item(0))==null?void 0:u.clientY)!=null?R:e.clientY;s=(a.value.getBoundingClientRect().bottom-g)/n.sliderSize*100}else{const g=(C=(x=(P=e.touches)==null?void 0:P.item(0))==null?void 0:x.clientX)!=null?C:e.clientX,M=a.value.getBoundingClientRect().left;s=(g-M)/n.sliderSize*100}if(!(s<0||s>100))return v(s)};return{elFormItem:T,slider:a,firstButton:d,secondButton:b,sliderDisabled:m,minValue:o,maxValue:i,runwayStyle:k,barStyle:z,resetSize:B,setPosition:v,emitChange:w,onSliderWrapperPrevent:e=>{var l,u;((l=f.firstButton.value)!=null&&l.dragging||(u=f.secondButton.value)!=null&&u.dragging)&&e.preventDefault()},onSliderClick:e=>{E(e)&&w()},onSliderDown:async e=>{const l=E(e);l&&(await N(),l.value.onButtonDown(e))},onSliderMarkerDown:e=>{m.value||n.dragging||v(e)},setFirstValue:F,setSecondValue:O}};export{Q as u};
